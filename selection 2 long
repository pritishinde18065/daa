import time
import random

# Iterative Selection Sort
def iterative_selection_sort(arr):
    comparisons, swaps = 0, 0
    n = len(arr)
    for i in range(n):
        min_idx = i
        for j in range(i + 1, n):
            comparisons += 1
            if arr[j] < arr[min_idx]:
                min_idx = j
        if min_idx != i:
            arr[i], arr[min_idx] = arr[min_idx], arr[i]
            swaps += 1
    return comparisons, swaps

# Recursive Selection Sort
def recursive_selection_sort(arr, n, index=0, stats=None):
    if stats is None:
        stats = {"comparisons": 0, "swaps": 0}

    if index == n:
        return stats

    min_idx = index
    for j in range(index + 1, n):
        stats["comparisons"] += 1
        if arr[j] < arr[min_idx]:
            min_idx = j

    if min_idx != index:
        arr[index], arr[min_idx] = arr[min_idx], arr[index]
        stats["swaps"] += 1

    return recursive_selection_sort(arr, n, index + 1, stats)

# Test cases
test_cases = {
    "Already Sorted": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25],
    "Reverse Sorted": [25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1],
    "Random Order": [16, 1, 4, 2, 12, 9, 10, 3, 5, 24, 14, 20, 6, 23, 7, 25, 19, 18, 8, 22, 11, 17, 13, 15, 21],
    "Nearly Sorted": [24, 25, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 1, 2],
    "Single Element at the End": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 1],
    "Large Input": random.sample(range(1, 10001), 10000),  # 10,000 random elements
}

# Perform the tests
results = []

for name, arr in test_cases.items():
    # Iterative Selection Sort
    arr_iterative = arr.copy()
    start_time = time.time()
    comparisons, swaps = iterative_selection_sort(arr_iterative)
    time_taken_iterative = time.time() - start_time

    # Recursive Selection Sort
    arr_recursive = arr.copy()
    start_time = time.time()
    stats = recursive_selection_sort(arr_recursive, len(arr_recursive))
    time_taken_recursive = time.time() - start_time

    # Append results
    results.append({
        "Test Case": name,
        "Iterative Time (s)": time_taken_iterative,
        "Iterative Comparisons": comparisons,
        "Iterative Swaps": swaps,
        "Recursive Time (s)": time_taken_recursive,
        "Recursive Comparisons": stats["comparisons"],
        "Recursive Swaps": stats["swaps"],
    })

# Print results in a tabular format
print("{:<25} {:>20} {:>20} {:>15} {:>20} {:>20} {:>15}".format(
    "Test Case", "Iterative Time (s)", "Iterative Comparisons", "Iterative Swaps",
    "Recursive Time (s)", "Recursive Comparisons", "Recursive Swaps"
))
print("-" * 140)
for result in results:
    print("{:<25} {:>20.6f} {:>20} {:>15} {:>20.6f} {:>20} {:>15}".format(
        result["Test Case"], result["Iterative Time (s)"], result["Iterative Comparisons"], result["Iterative Swaps"],
        result["Recursive Time (s)"], result["Recursive Comparisons"], result["Recursive Swaps"]
    ))
