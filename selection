def selection_sort_recursive(arr, start=0):
    # Base case: If we've reached the end of the array, sorting is complete
    if start >= len(arr) - 1:
        return
    
    # Find the index of the minimum element in the remaining unsorted part
    min_index = start
    for i in range(start + 1, len(arr)):
        if arr[i] < arr[min_index]:
            min_index = i
    
    # Swap the found minimum element with the first element of the unsorted part
    arr[start], arr[min_index] = arr[min_index], arr[start]
    
    # Recursively sort the remaining unsorted part
    selection_sort_recursive(arr, start + 1)

# Take input from the user
user_input = input("Enter the elements of the array, separated by spaces: ")
arr = list(map(int, user_input.split()))  # Convert input to a list of integers

print("Original array:", arr)
selection_sort_recursive(arr)
print("Sorted array:", arr)









def selection_sort_iterative(arr):
    # Traverse through all elements of the array
    for i in range(len(arr)):
        # Find the minimum element in the remaining unsorted array
        min_index = i
        for j in range(i + 1, len(arr)):
            if arr[j] < arr[min_index]:
                min_index = j
        
        # Swap the found minimum element with the element at index i
        arr[i], arr[min_index] = arr[min_index], arr[i]

# Take input from the user
user_input = input("Enter the elements of the array, separated by spaces: ")
arr = list(map(int, user_input.split()))  # Convert input to a list of integers

print("Original array:", arr)
selection_sort_iterative(arr)
print("Sorted array:", arr)
